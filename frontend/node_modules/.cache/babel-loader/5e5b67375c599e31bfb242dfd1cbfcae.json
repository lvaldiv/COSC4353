{"ast":null,"code":"var _jsxFileName = \"/Users/leecavazos/Desktop/COSC4353/COSC4353-1/frontend/src/components/authentication/fuel/FuelForm.js\",\n    _s = $RefreshSig$();\n\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill'; // material\n\nimport { Link, Stack, Checkbox, TextField, IconButton, InputAdornment, FormControlLabel } from '@mui/material';\nimport { LoadingButton } from '@mui/lab'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FuelForm() {\n  _s();\n\n  const navigate = useNavigate(); //const [showPassword, setShowPassword] = useState(false);\n\n  const FuelSchema = Yup.object().shape({\n    Gallons: Yup.number().required('Number is required').positive('Number must be positive'),\n    Address: Yup.string().min(2, 'Too Short!').max(100, 'Too Long').required('Address is required'),\n    SuggestedPrice: Yup.number().required()\n  });\n  const formik = useFormik({\n    initialValues: {\n      Gallons: null,\n      Address: '',\n      SuggestedPrice: null,\n      remember: true\n    },\n    validationSchema: FuelSchema,\n    onSubmit: () => {\n      navigate('/dashboard', {\n        replace: true\n      });\n    }\n  });\n  const {\n    errors,\n    touched,\n    values,\n    isSubmitting,\n    handleSubmit,\n    getFieldProps\n  } = formik; //  const handleShowPassword = () => {\n  //    setShowPassword((show) => !show);\n  //  };\n\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"off\",\n          type: \"Gallons\",\n          label: \"Gallons Requested\",\n          ...getFieldProps('Gallons'),\n          error: Boolean(touched.Gallons && errors.Gallons),\n          helperText: touched.Gallons && errors.Gallons\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          type: \"Address\",\n          label: \"Delivery Address: \",\n          ...getFieldProps('Address'),\n          editable: false,\n          error: Boolean(touched.Address && errors.Address),\n          helperText: touched.Address && errors.Address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"off\",\n          label: \"Suggested Price: $\",\n          ...getFieldProps('SuggestedPrice'),\n          error: Boolean(touched.SuggestedPrice && errors.SuggestedPrice),\n          helperText: touched.SuggestedPrice && errors.SuggestedPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        fullWidth: true,\n        size: \"large\",\n        type: \"submit\",\n        variant: \"contained\",\n        loading: isSubmitting,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FuelForm, \"bpSrOvH8nJQ9VaMidkvMycx/GW8=\", false, function () {\n  return [useNavigate, useFormik];\n});\n\n_c = FuelForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FuelForm\");","map":{"version":3,"sources":["/Users/leecavazos/Desktop/COSC4353/COSC4353-1/frontend/src/components/authentication/fuel/FuelForm.js"],"names":["Yup","useState","Link","RouterLink","useNavigate","useFormik","Form","FormikProvider","Icon","eyeFill","eyeOffFill","Stack","Checkbox","TextField","IconButton","InputAdornment","FormControlLabel","LoadingButton","FuelForm","navigate","FuelSchema","object","shape","Gallons","number","required","positive","Address","string","min","max","SuggestedPrice","formik","initialValues","remember","validationSchema","onSubmit","replace","errors","touched","values","isSubmitting","handleSubmit","getFieldProps","Boolean"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\n// material\nimport {\n  Link,\n  Stack,\n  Checkbox,\n  TextField,\n  IconButton,\n  InputAdornment,\n  FormControlLabel\n} from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n\n// ----------------------------------------------------------------------\n\nexport default function FuelForm() {\n  const navigate = useNavigate();\n  //const [showPassword, setShowPassword] = useState(false);\n\n  const FuelSchema = Yup.object().shape({\n    Gallons: Yup.number().required('Number is required').positive('Number must be positive'),\n    Address: Yup.string().min(2, 'Too Short!').max(100, 'Too Long').required('Address is required'),\n    SuggestedPrice: Yup.number().required()\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      Gallons: null,\n      Address: '',\n      SuggestedPrice: null,\n      remember: true\n    },\n    validationSchema: FuelSchema,\n    onSubmit: () => {\n      navigate('/dashboard', { replace: true });\n    }\n  });\n\n  const { errors, touched, values, isSubmitting, handleSubmit, getFieldProps } = formik;\n\n//  const handleShowPassword = () => {\n//    setShowPassword((show) => !show);\n//  };\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          <TextField\n            fullWidth\n            autoComplete=\"off\"\n            type=\"Gallons\"\n            label=\"Gallons Requested\"\n            {...getFieldProps('Gallons')}\n            error={Boolean(touched.Gallons && errors.Gallons)}\n            helperText={touched.Gallons && errors.Gallons}\n          />\n\n          <TextField\n            fullWidth\n            type = \"Address\"\n            label=\"Delivery Address: \"\n            {...getFieldProps('Address')}\n            editable= {false}\n            error={Boolean(touched.Address && errors.Address)}\n            helperText={touched.Address && errors.Address}\n          />\n\n          <TextField\n            fullWidth\n            autoComplete=\"off\"\n            label=\"Suggested Price: $\"\n            {...getFieldProps('SuggestedPrice')}\n            error={Boolean(touched.SuggestedPrice && errors.SuggestedPrice)}\n            helperText={touched.SuggestedPrice && errors.SuggestedPrice}\n          />\n        </Stack>\n\n        <LoadingButton\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          loading={isSubmitting}\n        >\n          Submit\n        </LoadingButton>\n      </Form>\n    </FormikProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}