{"ast":null,"code":"var _jsxFileName = \"/Users/leecavazos/Desktop/COSC4353/COSC4353-1/frontend/src/layouts/dashboard/LanguagePopover.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react'; // material\n\nimport { alpha } from '@mui/material/styles';\nimport { Box, MenuItem, ListItemIcon, ListItemText, IconButton } from '@mui/material'; // components\n\nimport MenuPopover from '../../components/MenuPopover'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LANGS = [{\n  value: 'en',\n  label: 'English',\n  icon: '/static/icons/ic_flag_en.svg'\n}, {\n  value: 'de',\n  label: 'German',\n  icon: '/static/icons/ic_flag_de.svg'\n}, {\n  value: 'fr',\n  label: 'French',\n  icon: '/static/icons/ic_flag_fr.svg'\n}]; // ----------------------------------------------------------------------\n\nexport default function LanguagePopover() {\n  _s();\n\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      ref: anchorRef,\n      onClick: handleOpen,\n      sx: {\n        padding: 0,\n        width: 44,\n        height: 44,\n        ...(open && {\n          bgcolor: theme => alpha(theme.palette.primary.main, theme.palette.action.focusOpacity)\n        })\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: LANGS[0].icon,\n        alt: LANGS[0].label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuPopover, {\n      open: open,\n      onClose: handleClose,\n      anchorEl: anchorRef.current,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          py: 1\n        },\n        children: [\" \", LANGS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          selected: option.value === LANGS[0].value,\n          onClick: handleClose,\n          sx: {\n            py: 1,\n            px: 2.5\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              component: \"img\",\n              alt: option.label,\n              src: option.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(ListItemText, {\n            primaryTypographyProps: {\n              variant: 'body2'\n            },\n            children: [\" \", option.label, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 32\n          }, this), \" \"]\n        }, option.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 37\n        }, this)), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true);\n}\n\n_s(LanguagePopover, \"Hd6TMPAqlaYCVBM5IMM9OnvyEW4=\");\n\n_c = LanguagePopover;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguagePopover\");","map":{"version":3,"sources":["/Users/leecavazos/Desktop/COSC4353/COSC4353-1/frontend/src/layouts/dashboard/LanguagePopover.js"],"names":["useRef","useState","alpha","Box","MenuItem","ListItemIcon","ListItemText","IconButton","MenuPopover","LANGS","value","label","icon","LanguagePopover","anchorRef","open","setOpen","handleOpen","handleClose","padding","width","height","bgcolor","theme","palette","primary","main","action","focusOpacity","current","py","map","option","px","variant"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\n// material\nimport { alpha } from '@mui/material/styles';\nimport { Box, MenuItem, ListItemIcon, ListItemText, IconButton } from '@mui/material';\n// components\nimport MenuPopover from '../../components/MenuPopover';\n\n// ----------------------------------------------------------------------\n\nconst LANGS = [{\n        value: 'en',\n        label: 'English',\n        icon: '/static/icons/ic_flag_en.svg'\n    },\n    {\n        value: 'de',\n        label: 'German',\n        icon: '/static/icons/ic_flag_de.svg'\n    },\n    {\n        value: 'fr',\n        label: 'French',\n        icon: '/static/icons/ic_flag_fr.svg'\n    }\n];\n\n// ----------------------------------------------------------------------\n\nexport default function LanguagePopover() {\n    const anchorRef = useRef(null);\n    const [open, setOpen] = useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return ( <\n        >\n        <\n        IconButton ref = { anchorRef }\n        onClick = { handleOpen }\n        sx = {\n            {\n                padding: 0,\n                width: 44,\n                height: 44,\n                ...(open && {\n                    bgcolor: (theme) => alpha(theme.palette.primary.main, theme.palette.action.focusOpacity)\n                })\n            }\n        } >\n        <\n        img src = { LANGS[0].icon }\n        alt = { LANGS[0].label }\n        /> < /\n        IconButton >\n\n        <\n        MenuPopover open = { open }\n        onClose = { handleClose }\n        anchorEl = { anchorRef.current } >\n        <\n        Box sx = {\n            { py: 1 }\n        } > {\n            LANGS.map((option) => ( <\n                MenuItem key = { option.value }\n                selected = { option.value === LANGS[0].value }\n                onClick = { handleClose }\n                sx = {\n                    { py: 1, px: 2.5 }\n                } >\n                <\n                ListItemIcon >\n                <\n                Box component = \"img\"\n                alt = { option.label }\n                src = { option.icon }\n                /> < /\n                ListItemIcon > <\n                ListItemText primaryTypographyProps = {\n                    { variant: 'body2' }\n                } > { option.label } <\n                /ListItemText> < /\n                MenuItem >\n            ))\n        } <\n        /Box> < /\n        MenuPopover > <\n        />\n    );\n}"]},"metadata":{},"sourceType":"module"}