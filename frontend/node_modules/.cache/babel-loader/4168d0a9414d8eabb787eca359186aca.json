{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lizthebett\\\\Desktop\\\\COSC4353\\\\frontend\\\\src\\\\components\\\\authentication\\\\register\\\\RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport { Icon } from '@iconify/react';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport { useNavigate } from 'react-router-dom'; // material\n\nimport { Stack, TextField, IconButton, InputAdornment } from '@mui/material';\nimport { LoadingButton } from '@mui/lab'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STATES = [{\n  value: 'AL',\n  label: 'Alabama'\n}, {\n  value: 'AK',\n  label: 'Alaska'\n}, {\n  value: 'AZ',\n  label: 'Arizona'\n}, {\n  value: 'AR',\n  label: 'Arkansas'\n}, {\n  value: 'CA',\n  label: 'California'\n}, {\n  value: 'CO',\n  label: 'Colorado'\n}, {\n  value: 'CT',\n  label: 'Connecticuit'\n}, {\n  value: 'DE',\n  label: 'Delaware'\n}, {\n  value: 'FL',\n  label: 'Florida'\n}, {\n  value: 'GA',\n  label: 'Georgia'\n}, {\n  value: 'HI',\n  label: 'Hawaii'\n}, {\n  value: 'ID',\n  label: 'Idaho'\n}, {\n  value: 'IL',\n  label: 'Illinois'\n}, {\n  value: 'IN',\n  label: 'Indiana'\n}, {\n  value: 'IA',\n  label: 'Iowa'\n}, {\n  value: 'KS',\n  label: 'Kansas'\n}, {\n  value: 'KY',\n  label: 'Kentucky'\n}, {\n  value: 'LA',\n  label: 'Louisiana'\n}, {\n  value: 'ME',\n  label: 'Maine'\n}, {\n  value: 'MD',\n  label: 'Maryland'\n}, {\n  value: 'MA',\n  label: 'Massachusetts'\n}, {\n  value: 'MI',\n  label: 'Michigan'\n}, {\n  value: 'MN',\n  label: 'Minnesota'\n}, {\n  value: 'MS',\n  label: 'Mississippi'\n}, {\n  value: 'MO',\n  label: 'Missouri'\n}, {\n  value: 'MT',\n  label: 'Montana'\n}, {\n  value: 'NE',\n  label: 'Nebraska'\n}, {\n  value: 'NV',\n  label: 'Nevada'\n}, {\n  value: 'NH',\n  label: 'New Hampshire'\n}, {\n  value: 'NJ',\n  label: 'New Jersey'\n}, {\n  value: 'NM',\n  label: 'New Mexico'\n}, {\n  value: 'NY',\n  label: 'New York'\n}, {\n  value: 'NC',\n  label: 'North Carolina'\n}, {\n  value: 'ND',\n  label: 'North Dakota'\n}, {\n  value: 'OH',\n  label: 'Ohio'\n}, {\n  value: 'OK',\n  label: 'Oklahoma'\n}, {\n  value: 'OR',\n  label: 'Oregon'\n}, {\n  value: 'PA',\n  label: 'Pennsylvania'\n}, {\n  value: 'RI',\n  label: 'Rhode Island'\n}, {\n  value: 'SC',\n  label: 'South Carolina'\n}, {\n  value: 'SD',\n  label: 'South Dakota'\n}, {\n  value: 'TN',\n  label: 'Tennessee'\n}, {\n  value: 'TX',\n  label: 'Texas'\n}, {\n  value: 'VA',\n  label: 'Virginia'\n}, {\n  value: 'WA',\n  label: 'Washington'\n}, {\n  value: 'WV',\n  label: 'West Virgina'\n}, {\n  value: 'WI',\n  label: 'Wisconsin'\n}, {\n  value: 'WY',\n  label: 'Wyoming'\n}];\nexport default function RegisterForm() {\n  _s();\n\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const RegisterSchema = Yup.object().shape({\n    firstName: Yup.string().min(2, 'Too Short!').max(25, 'Too Long!').required('First name required'),\n    lastName: Yup.string().min(2, 'Too Short!').max(25, 'Too Long!').required('Last name required'),\n    Address: Yup.string().min(2, 'Too Short!').max(100, 'Too Long').required('Address is required'),\n    Address2: Yup.string().min(2, 'Too Short!').max(100, 'Too Long').optional('Address is optional'),\n    City: Yup.string().min(2, 'Too Short!').max(100, 'Too Long').required('City is required'),\n    State: Yup.string().min(2, 'Too Short!').max(2, 'Too Long').required('State is required'),\n    ZipCode: Yup.string().min(5, 'Too Short!').max(9, 'Too Long').required('ZipCode is required'),\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n    password: Yup.string().required('Password is required')\n  });\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      Address: '',\n      Address2: '',\n      City: '',\n      State: '',\n      ZipCode: '',\n      email: '',\n      password: ''\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: () => {\n      navigate('/dashboard', {\n        replace: true\n      });\n    }\n  });\n  const {\n    errors,\n    touched,\n    handleSubmit,\n    isSubmitting,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: {\n            xs: 'column',\n            sm: 'row'\n          },\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"First name\",\n            ...getFieldProps('firstName'),\n            error: Boolean(touched.firstName && errors.firstName),\n            helperText: touched.firstName && errors.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Last name\",\n            ...getFieldProps('lastName'),\n            error: Boolean(touched.lastName && errors.lastName),\n            helperText: touched.lastName && errors.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 9\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"address\",\n          type: \"Address\",\n          label: \"Address\",\n          ...getFieldProps('Address'),\n          error: Boolean(touched.Address && errors.Address),\n          helperText: touched.Address && errors.Address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"address\",\n          type: \"Address2\",\n          label: \"Address2(Optional)\",\n          ...getFieldProps('Address2'),\n          error: Boolean(touched.Address2 && errors.Address2),\n          helperText: touched.Address2 && errors.Address2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: {\n            xs: 'column',\n            sm: 'row'\n          },\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            autoComplete: \"city\",\n            type: \"City\",\n            label: \"City\",\n            ...getFieldProps('City'),\n            error: Boolean(touched.City && errors.City),\n            helperText: touched.City && errors.City\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 9\n          }, this), \"  \", /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"State_dropdown\",\n              children: \" State \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 9\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Select, {\n              type: \"State\",\n              value: 'st',\n              label: \"Select State\",\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'AL',\n                children: \" Alabama \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 9\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'AK',\n                children: \" Alaska \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 58\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'AZ',\n                children: \" Arizona \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 57\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'AR',\n                children: \" Arkansas \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 58\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'CA',\n                children: \" California \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 59\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'CO',\n                children: \" Colorado \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 61\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'CT',\n                children: \" Connecticut \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 59\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'DE',\n                children: \" Delaware \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 62\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'FL',\n                children: \" Florida \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 59\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'HI',\n                children: \" Hawaii \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 58\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'ID',\n                children: \" Idaho \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 57\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'IL',\n                children: \" Illinois \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 56\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'IN',\n                children: \" Indiana \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 59\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'IA',\n                children: \" Iowa \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 58\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'KS',\n                children: \" Kansas \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 55\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'KY',\n                children: \" Kentucky \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 57\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'LA',\n                children: \" Louisiana \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 59\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'AZ',\n                children: \" Arizona \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 60\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'ME',\n                children: \" Maine \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 58\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'MD',\n                children: \" Maryland \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 56\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'MA',\n                children: \" Massachusetts \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 59\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'MI',\n                children: \" Michigan \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 64\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'MN',\n                children: \" Minnesota \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 59\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'MS',\n                children: \" Mississippi \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 60\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'MO',\n                children: \" Missouri \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 62\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'MT',\n                children: \" Montana \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 59\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'NE',\n                children: \" Nebraska \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 58\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'NV',\n                children: \" Nevada \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 59\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'NH',\n                children: \" New Hampshire \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 57\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'NJ',\n                children: \" New Jersey \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 64\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'NM',\n                children: \" New Mexico \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 61\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'NY',\n                children: \" New York \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 61\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'NC',\n                children: \" North Carolina \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 59\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'ND',\n                children: \" North Dakota \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 65\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'OH',\n                children: \" Ohio \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 63\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'OK',\n                children: \" Oklahoma \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 55\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'OR',\n                children: \" Oregon \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 59\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'PA',\n                children: \" Pennsylvania \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 57\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'RI',\n                children: \" Rhode Island \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 63\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'SC',\n                children: \" South Carolina \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 63\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'SD',\n                children: \" South Dakota \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 65\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'TN',\n                children: \" Tennessee \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 63\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'TX',\n                children: \" Texas \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 60\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'UT',\n                children: \" Utah \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 56\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'VT',\n                children: \" Virginia \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 55\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'VA',\n                children: \" Washington \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 59\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'WA',\n                children: \" Nebraska \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 61\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'WV',\n                children: \" West Virginia \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 59\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'WI',\n                children: \" Wisconsin \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 64\n              }, this), \" \", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'WY',\n                children: \" Wyoming \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 60\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 65\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            autoComplete: \"state\",\n            type: \"State\",\n            label: \"State\",\n            ...getFieldProps('State'),\n            error: Boolean(touched.State && errors.State),\n            helperText: touched.State && errors.State\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 23\n          }, this), \"  \", /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            autoComplete: \"zipcode\",\n            type: \"ZipCode\",\n            label: \"ZipCode\",\n            ...getFieldProps('ZipCode'),\n            error: Boolean(touched.ZipCode && errors.ZipCode),\n            helperText: touched.ZipCode && errors.ZipCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 9\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"username\",\n          type: \"email\",\n          label: \"Email address\",\n          ...getFieldProps('email'),\n          error: Boolean(touched.email && errors.email),\n          helperText: touched.email && errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"current-password\",\n          type: showPassword ? 'text' : 'password',\n          label: \"Password\",\n          ...getFieldProps('password'),\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                onClick: () => setShowPassword(prev => !prev),\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  icon: showPassword ? eyeFill : eyeOffFill\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 21\n                }, this), \"  \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 21\n              }, this), \"  \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 33\n            }, this)\n          },\n          error: Boolean(touched.password && errors.password),\n          helperText: touched.password && errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n          fullWidth: true,\n          size: \"large\",\n          type: \"submit\",\n          variant: \"contained\",\n          loading: isSubmitting,\n          children: \"Register \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 9\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this), \"  \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 14\n  }, this);\n}\n\n_s(RegisterForm, \"TyfXYEpvWDWRGnFGjig1zuRer3M=\", false, function () {\n  return [useNavigate, useFormik];\n});\n\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/Lizthebett/Desktop/COSC4353/frontend/src/components/authentication/register/RegisterForm.js"],"names":["Yup","useState","Icon","useFormik","Form","FormikProvider","eyeFill","eyeOffFill","useNavigate","Stack","TextField","IconButton","InputAdornment","LoadingButton","STATES","value","label","RegisterForm","navigate","showPassword","setShowPassword","RegisterSchema","object","shape","firstName","string","min","max","required","lastName","Address","Address2","optional","City","State","ZipCode","email","password","formik","initialValues","validationSchema","onSubmit","replace","errors","touched","handleSubmit","isSubmitting","getFieldProps","xs","sm","Boolean","handleChange","endAdornment","prev"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\r\nimport { useState } from 'react';\r\nimport { Icon } from '@iconify/react';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\nimport { useNavigate } from 'react-router-dom';\r\n// material\r\nimport { Stack, TextField, IconButton, InputAdornment } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst STATES = [{\r\n        value: 'AL',\r\n        label: 'Alabama'\r\n    },\r\n    {\r\n        value: 'AK',\r\n        label: 'Alaska'\r\n    },\r\n    {\r\n        value: 'AZ',\r\n        label: 'Arizona'\r\n    },\r\n    {\r\n        value: 'AR',\r\n        label: 'Arkansas'\r\n    },\r\n    {\r\n        value: 'CA',\r\n        label: 'California'\r\n    },\r\n    {\r\n        value: 'CO',\r\n        label: 'Colorado'\r\n    },\r\n    {\r\n        value: 'CT',\r\n        label: 'Connecticuit'\r\n    },\r\n    {\r\n        value: 'DE',\r\n        label: 'Delaware'\r\n    },\r\n    {\r\n        value: 'FL',\r\n        label: 'Florida'\r\n    },\r\n    {\r\n        value: 'GA',\r\n        label: 'Georgia'\r\n    },\r\n    {\r\n        value: 'HI',\r\n        label: 'Hawaii'\r\n    },\r\n    {\r\n        value: 'ID',\r\n        label: 'Idaho'\r\n    },\r\n    {\r\n        value: 'IL',\r\n        label: 'Illinois'\r\n    },\r\n    {\r\n        value: 'IN',\r\n        label: 'Indiana'\r\n    },\r\n    {\r\n        value: 'IA',\r\n        label: 'Iowa'\r\n    },\r\n    {\r\n        value: 'KS',\r\n        label: 'Kansas'\r\n    },\r\n    {\r\n        value: 'KY',\r\n        label: 'Kentucky'\r\n    },\r\n    {\r\n        value: 'LA',\r\n        label: 'Louisiana'\r\n    },\r\n    {\r\n        value: 'ME',\r\n        label: 'Maine'\r\n    },\r\n    {\r\n        value: 'MD',\r\n        label: 'Maryland'\r\n    },\r\n    {\r\n        value: 'MA',\r\n        label: 'Massachusetts'\r\n    },\r\n    {\r\n        value: 'MI',\r\n        label: 'Michigan'\r\n    },\r\n    {\r\n        value: 'MN',\r\n        label: 'Minnesota'\r\n    },\r\n    {\r\n        value: 'MS',\r\n        label: 'Mississippi'\r\n    },\r\n    {\r\n        value: 'MO',\r\n        label: 'Missouri'\r\n    },\r\n    {\r\n        value: 'MT',\r\n        label: 'Montana'\r\n    },\r\n    {\r\n        value: 'NE',\r\n        label: 'Nebraska'\r\n    },\r\n    {\r\n        value: 'NV',\r\n        label: 'Nevada'\r\n    },\r\n    {\r\n        value: 'NH',\r\n        label: 'New Hampshire'\r\n    },\r\n    {\r\n        value: 'NJ',\r\n        label: 'New Jersey'\r\n    },\r\n    {\r\n        value: 'NM',\r\n        label: 'New Mexico'\r\n    },\r\n    {\r\n        value: 'NY',\r\n        label: 'New York'\r\n    },\r\n    {\r\n        value: 'NC',\r\n        label: 'North Carolina'\r\n    },\r\n    {\r\n        value: 'ND',\r\n        label: 'North Dakota'\r\n    },\r\n    {\r\n        value: 'OH',\r\n        label: 'Ohio'\r\n    },\r\n    {\r\n        value: 'OK',\r\n        label: 'Oklahoma'\r\n    },\r\n    {\r\n        value: 'OR',\r\n        label: 'Oregon'\r\n    },\r\n    {\r\n        value: 'PA',\r\n        label: 'Pennsylvania'\r\n    },\r\n    {\r\n        value: 'RI',\r\n        label: 'Rhode Island'\r\n    },\r\n    {\r\n        value: 'SC',\r\n        label: 'South Carolina'\r\n    },\r\n    {\r\n        value: 'SD',\r\n        label: 'South Dakota'\r\n    },\r\n    {\r\n        value: 'TN',\r\n        label: 'Tennessee'\r\n    },\r\n    {\r\n        value: 'TX',\r\n        label: 'Texas'\r\n    },\r\n    {\r\n        value: 'VA',\r\n        label: 'Virginia'\r\n    },\r\n    {\r\n        value: 'WA',\r\n        label: 'Washington'\r\n    },\r\n    {\r\n        value: 'WV',\r\n        label: 'West Virgina'\r\n    },\r\n    {\r\n        value: 'WI',\r\n        label: 'Wisconsin'\r\n    },\r\n    {\r\n        value: 'WY',\r\n        label: 'Wyoming'\r\n    }\r\n];\r\n\r\n\r\nexport default function RegisterForm() {\r\n    const navigate = useNavigate();\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const RegisterSchema = Yup.object().shape({\r\n        firstName: Yup.string()\r\n            .min(2, 'Too Short!')\r\n            .max(25, 'Too Long!')\r\n            .required('First name required'),\r\n        lastName: Yup.string().min(2, 'Too Short!').max(25, 'Too Long!').required('Last name required'),\r\n        Address: Yup.string().min(2, 'Too Short!').max(100, 'Too Long').required('Address is required'),\r\n        Address2: Yup.string().min(2, 'Too Short!').max(100, 'Too Long').optional('Address is optional'),\r\n        City: Yup.string().min(2, 'Too Short!').max(100, 'Too Long').required('City is required'),\r\n        State: Yup.string().min(2, 'Too Short!').max(2, 'Too Long').required('State is required'),\r\n        ZipCode: Yup.string().min(5, 'Too Short!').max(9, 'Too Long').required('ZipCode is required'),\r\n        email: Yup.string().email('Email must be a valid email address').required('Email is required'),\r\n        password: Yup.string().required('Password is required')\r\n    });\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: '',\r\n            lastName: '',\r\n            Address: '',\r\n            Address2: '',\r\n            City: '',\r\n            State: '',\r\n            ZipCode: '',\r\n            email: '',\r\n            password: ''\r\n        },\r\n        validationSchema: RegisterSchema,\r\n        onSubmit: () => {\r\n            navigate('/dashboard', { replace: true });\r\n        }\r\n    });\r\n\r\n    const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\r\n\r\n    return ( < FormikProvider value = { formik } >\r\n        <\r\n        Form autoComplete = \"off\"\r\n        noValidate onSubmit = { handleSubmit } >\r\n        <\r\n        Stack spacing = { 3 } >\r\n        <\r\n        Stack direction = {\r\n            { xs: 'column', sm: 'row' }\r\n        }\r\n        spacing = { 2 } >\r\n        <\r\n        TextField fullWidth label = \"First name\" {...getFieldProps('firstName') }\r\n        error = { Boolean(touched.firstName && errors.firstName) }\r\n        helperText = { touched.firstName && errors.firstName }\r\n        />\r\n\r\n        <\r\n        TextField fullWidth label = \"Last name\" {...getFieldProps('lastName') }\r\n        error = { Boolean(touched.lastName && errors.lastName) }\r\n        helperText = { touched.lastName && errors.lastName }\r\n        />  <\r\n        /Stack>\r\n\r\n        <\r\n        TextField fullWidth autoComplete = \"address\"\r\n        type = \"Address\"\r\n        label = \"Address\" {...getFieldProps('Address') }\r\n        error = { Boolean(touched.Address && errors.Address) }\r\n        helperText = { touched.Address && errors.Address }\r\n        />\r\n\r\n        <\r\n        TextField fullWidth autoComplete = \"address\"\r\n        type = \"Address2\"\r\n        label = \"Address2(Optional)\" {...getFieldProps('Address2') }\r\n        error = { Boolean(touched.Address2 && errors.Address2) }\r\n        helperText = { touched.Address2 && errors.Address2 }\r\n        />\r\n\r\n        <\r\n        Stack direction = {\r\n            { xs: 'column', sm: 'row' }\r\n        }\r\n        spacing = { 2 } >\r\n        <\r\n        TextField fullWidth autoComplete = \"city\"\r\n        type = \"City\"\r\n        label = \"City\" {...getFieldProps('City') }\r\n        error = { Boolean(touched.City && errors.City) }\r\n        helperText = { touched.City && errors.City }\r\n        />  <\r\n        FormControl fullWidth >\r\n        <\r\n        InputLabel id = \"State_dropdown\" > State < /InputLabel> <\r\n        Select type = \"State\"\r\n        value = { 'st' }\r\n        label = \"Select State\"\r\n        onChange = { handleChange } >\r\n        <\r\n        MenuItem value = { 'AL' } > Alabama < /MenuItem> <\r\n        MenuItem value = { 'AK' } > Alaska < /MenuItem> <\r\n        MenuItem value = { 'AZ' } > Arizona < /MenuItem> <\r\n        MenuItem value = { 'AR' } > Arkansas < /MenuItem> <\r\n        MenuItem value = { 'CA' } > California < /MenuItem> <\r\n        MenuItem value = { 'CO' } > Colorado < /MenuItem> <\r\n        MenuItem value = { 'CT' } > Connecticut < /MenuItem> <\r\n        MenuItem value = { 'DE' } > Delaware < /MenuItem> <\r\n        MenuItem value = { 'FL' } > Florida < /MenuItem> <\r\n        MenuItem value = { 'HI' } > Hawaii < /MenuItem> <\r\n        MenuItem value = { 'ID' } > Idaho < /MenuItem> <\r\n        MenuItem value = { 'IL' } > Illinois < /MenuItem> <\r\n        MenuItem value = { 'IN' } > Indiana < /MenuItem> <\r\n        MenuItem value = { 'IA' } > Iowa < /MenuItem> <\r\n        MenuItem value = { 'KS' } > Kansas < /MenuItem> <\r\n        MenuItem value = { 'KY' } > Kentucky < /MenuItem> <\r\n        MenuItem value = { 'LA' } > Louisiana < /MenuItem> <\r\n        MenuItem value = { 'AZ' } > Arizona < /MenuItem> <\r\n        MenuItem value = { 'ME' } > Maine < /MenuItem> <\r\n        MenuItem value = { 'MD' } > Maryland < /MenuItem> <\r\n        MenuItem value = { 'MA' } > Massachusetts < /MenuItem> <\r\n        MenuItem value = { 'MI' } > Michigan < /MenuItem> <\r\n        MenuItem value = { 'MN' } > Minnesota < /MenuItem> <\r\n        MenuItem value = { 'MS' } > Mississippi < /MenuItem> <\r\n        MenuItem value = { 'MO' } > Missouri < /MenuItem> <\r\n        MenuItem value = { 'MT' } > Montana < /MenuItem> <\r\n        MenuItem value = { 'NE' } > Nebraska < /MenuItem> <\r\n        MenuItem value = { 'NV' } > Nevada < /MenuItem> <\r\n        MenuItem value = { 'NH' } > New Hampshire < /MenuItem> <\r\n        MenuItem value = { 'NJ' } > New Jersey < /MenuItem> <\r\n        MenuItem value = { 'NM' } > New Mexico < /MenuItem> <\r\n        MenuItem value = { 'NY' } > New York < /MenuItem> <\r\n        MenuItem value = { 'NC' } > North Carolina < /MenuItem> <\r\n        MenuItem value = { 'ND' } > North Dakota < /MenuItem> <\r\n        MenuItem value = { 'OH' } > Ohio < /MenuItem> <\r\n        MenuItem value = { 'OK' } > Oklahoma < /MenuItem> <\r\n        MenuItem value = { 'OR' } > Oregon < /MenuItem> <\r\n        MenuItem value = { 'PA' } > Pennsylvania < /MenuItem> <\r\n        MenuItem value = { 'RI' } > Rhode Island < /MenuItem> <\r\n        MenuItem value = { 'SC' } > South Carolina < /MenuItem> <\r\n        MenuItem value = { 'SD' } > South Dakota < /MenuItem> <\r\n        MenuItem value = { 'TN' } > Tennessee < /MenuItem> <\r\n        MenuItem value = { 'TX' } > Texas < /MenuItem> <\r\n        MenuItem value = { 'UT' } > Utah < /MenuItem> <\r\n        MenuItem value = { 'VT' } > Virginia < /MenuItem> <\r\n        MenuItem value = { 'VA' } > Washington < /MenuItem> <\r\n        MenuItem value = { 'WA' } > Nebraska < /MenuItem> <\r\n        MenuItem value = { 'WV' } > West Virginia < /MenuItem> <\r\n        MenuItem value = { 'WI' } > Wisconsin < /MenuItem> <\r\n        MenuItem value = { 'WY' } > Wyoming < /MenuItem> <\r\n        /Select> <\r\n        /FormControl> <\r\n        TextField fullWidth autoComplete = \"state\"\r\n        type = \"State\"\r\n        label = \"State\" {...getFieldProps('State') }\r\n        error = { Boolean(touched.State && errors.State) }\r\n        helperText = { touched.State && errors.State }\r\n        />  <\r\n        TextField fullWidth autoComplete = \"zipcode\"\r\n        type = \"ZipCode\"\r\n        label = \"ZipCode\" {...getFieldProps('ZipCode') }\r\n        error = { Boolean(touched.ZipCode && errors.ZipCode) }\r\n        helperText = { touched.ZipCode && errors.ZipCode }\r\n        />  <\r\n        /Stack>  <\r\n        TextField fullWidth autoComplete = \"username\"\r\n        type = \"email\"\r\n        label = \"Email address\" {...getFieldProps('email') }\r\n        error = { Boolean(touched.email && errors.email) }\r\n        helperText = { touched.email && errors.email }\r\n        />\r\n\r\n        <\r\n        TextField fullWidth autoComplete = \"current-password\"\r\n        type = { showPassword ? 'text' : 'password' }\r\n        label = \"Password\" {...getFieldProps('password') }\r\n        InputProps = {\r\n            {\r\n                endAdornment: ( < InputAdornment position = \"end\" >\r\n                    <\r\n                    IconButton edge = \"end\"\r\n                    onClick = {\r\n                        () => setShowPassword((prev) => !prev)\r\n                    } >\r\n                    <\r\n                    Icon icon = { showPassword ? eyeFill : eyeOffFill }\r\n                    />  <\r\n                    /IconButton>  <\r\n                    /InputAdornment>\r\n                )\r\n            }\r\n        }\r\n        error = { Boolean(touched.password && errors.password) }\r\n        helperText = { touched.password && errors.password }\r\n        />\r\n\r\n        <\r\n        LoadingButton fullWidth size = \"large\"\r\n        type = \"submit\"\r\n        variant = \"contained\"\r\n        loading = { isSubmitting } >\r\n        Register <\r\n        /LoadingButton>  <\r\n        /Stack>  <\r\n        /Form>  <\r\n        /FormikProvider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}